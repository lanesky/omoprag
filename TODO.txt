
STEP-1：  对OMOP Concept数据进行索引

(DONE) 1. 从ATHENA下载Concept数据
(DONE) 2. 将CONCEPT.csvImport到PostgreSQL中
(DONE) 3. 从Concept数据过滤出Vocubulary为Standard的数据，放在了"csv_for_indexing/CONCEPT_STANDARD.csv"中。

4. 找到合适的对于CSV文件的索引方法（可以看看以前的streamlit的project的代码）
5. 对于Standard Concept的数据，使用OpenAI Embedding API进行100条数据索引化，保存至本地（FAISS或者ChromaDB等）


STEP-2：  使用RAG技术，对于输入的query，进行语义匹配，找到最接近的OMOP Concept
1. 对于输入的query，使用OpenAI，在合适的医疗用于Domain中翻译成若干个候选的英文。输出是Structured JSON。
2. 使用RAG技术，对每个候选的英文，使用索引，找到最接近的一个或者多个OMOP Concept。


STEP-3： 验证以及优化
1. 对于找到的OMOP Concept，在Step-1中得到的Concept数据中(直接查询CSV或者利用sqlite)，验证是否找到对应的OMOP Concept。
2. 如果没有找到，则返回到STEP-2，重新进行语义匹配。

STEP-4： 添加CPT4数据，然后对所有CONCEPT数据进行索引化
1. 使用CPT4的Licence Key，则Import CPT4数据到PostgreSQL中
2. 重新对所有的Concept数据进行索引